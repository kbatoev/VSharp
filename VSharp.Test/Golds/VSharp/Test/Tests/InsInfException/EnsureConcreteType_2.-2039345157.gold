METHOD: System.Int32 VSharp.Test.Tests.InsInfException.EnsureConcreteType_2()
RESULT: Totally 1 state:
123
MEMORY DUMP:
--------------- Fields: ---------------
_field ==> {
        5 <- (HeapRef 8 to VSharp.Test.Tests.PDR+ClassWithOneField)
    }
_field ==> {
        3 <- (HeapRef 5 to VSharp.Test.Tests.InsInfException+GenericClass`1[VSharp.Test.Tests.PDR+ClassWithOneField])
    }
x ==> {8 <- 123}
--------------- Types tokens: ---------------
3 ==> VSharp.Test.Tests.InsInfException+GenericClass`1[VSharp.Test.Tests.InsInfException+GenericClass`1[VSharp.Test.Tests.PDR+ClassWithOneField]]
5 ==> VSharp.Test.Tests.InsInfException+GenericClass`1[VSharp.Test.Tests.PDR+ClassWithOneField]
8 ==> VSharp.Test.Tests.PDR+ClassWithOneField
--------------- Stack: ---------------
key = __loc__0, value = (HeapRef 5 to VSharp.Test.Tests.InsInfException+GenericClass`1[VSharp.Test.Tests.PDR+ClassWithOneField])
key = __loc__1, value = (HeapRef 8 to VSharp.Test.Tests.PDR+ClassWithOneField)
Initialized types = { VSharp.Test.Tests.InsInfException+GenericClass`1[VSharp.Test.Tests.InsInfException+GenericClass`1[VSharp.Test.Tests.PDR+ClassWithOneField]], VSharp.Test.Tests.InsInfException, VSharp.Test.Tests.InsInfException+GenericClass`1[VSharp.Test.Tests.PDR+ClassWithOneField], System.Object, VSharp.Test.Tests.PDR+ClassWithOneField }
